@PART[*]:HAS[!MODULE[ModuleTagList]]:AFTER[zLRTR]
{
  %MODULE[ModuleTagList] { tag = autotagged }
}



// PadInfrastructure
// Pad Infrastructure
// Part of the pad infrastructure and does not contribute to build time or assesed mass/size.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[PadInfrastructure]],@MODULE[*LaunchClamp]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = PadInfrastructure }
}
@PART[AM_MLP*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[PadInfrastructure]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = PadInfrastructure }
}



// Avionics
// Has avionics to control the craft, requiring extensive testing.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Avionics]],@MODULE[ModuleControlSurface]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = Avionics }
}
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Avionics]],@MODULE[FARControllableSurface]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = Avionics }
}



// Cockpit
// Has a cockpit.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Cockpit]],#capsuleType[Cockpit]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = Cockpit }
}



// EngineSolid
// Solid Rocket Motor
// Has a solid rocket motor. Much easier to integrate and test than liquid engines.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Engine*]],@MODULE[ModuleEngines*]:HAS[#EngineType[SolidBooster]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineSolid }
}



// EngineNuclear
// Has radioactive elements that must be carefully handled and integrated, and require additional administrative permits.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Engine*]],@MODULE[ModuleEngines*]:HAS[#EngineType[Nuclear]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineNuclear }
}
@PART[*]:HAS[#tags[*nuke*],@MODULE[ModuleEngines*],@MODULE[ModuleTagList]:HAS[~tag[Nuclear],~tag[EngineNuclear],~tag[NuclearRTG]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineNuclear }
}



// EngineTurbine
// Not used, only marking to avoid being tagged below.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Engine*]],@MODULE[ModuleEngines*]:HAS[#EngineType[Turbine]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineTurbine }
}
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Engine*]],@MODULE[ModuleEngines*]:HAS[#EngineType[LiquidFuel]]]:AFTER[zLRTR]
{
	engineTypeBestGuess = true
	//Gets basic isp numbers
	ispV = #$MODULE[ModuleEngines*]/atmosphereCurve/key,0$
	@ispV ^= : -.*::  //for toroidial engines
	@ispV ^= :. ::
	//ispG = #$MODULE[ModuleEngines*]/atmosphereCurve/key,1$
	//@ispG ^= : -.*::  //for toroidial engines
	//@ispG ^= :. ::  
	
	//ispD = #$ispV$
	//@ispD -= #$ispG$
	
	//Gets max thrust
	maxT = #$MODULE[ModuleEngines*]/maxThrust$
}



// EngineLiquidPF
// Pressure-Fed Engine
// Has a pressure-fed liquid rocket engine that requires some additional testing.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Engine*]],@MODULE[ModuleRCSFX]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineLiquidPF }
}
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Engine*]],@MODULE[ModuleEngines*]:HAS[#EngineType[MonoProp]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineLiquidPF }
}
@PART[*]:HAS[#engineTypeBestGuess,#maxT[<25]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineLiquidPF }
}
@PART[*]:HAS[engineTypeBestGuess,#ispV[>320]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineLiquidPF }
}



// EngineLiquidTurbo
// Pump-Fed Engine
// Has a pump-fed liquid rocket engine. The turbopump is a very complicated piece of machinery that requires extensive testing.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Engine*]],#engineTypeBestGuess]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = EngineLiquidTurbo }
}



// HumanRated
// Human-Rated
// Has human-rated equipment that requires more time for integration and testing of the entire craft.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[HumanRated],~tag[PadInfrastructure]],#CrewCapacity[>0]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = HumanRated }
}
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[HumanRated],~tag[PadInfrastructure]],#CrewCapacity[>0]]:AFTER[zLRTR]
{
	@description ^=:$: <b><color=red>YOU SHOULDN'T SEE THIS ANYWHERE</color></b>
}



// Instruments
// Has scientific instruments. Currently, no effect on launch cost.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Instruments]],@MODULE[Experiment]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = Instruments }
}
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Instruments]],@MODULE[ModuleScienceExperiment]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = Instruments }
}



// NoResourceCostMult
// Already requires checking by integration teams, so resource toxicity / cryogenic level will not add to launch cost.



// NuclearRTG
// Nuclear RTG
// Has radioactive elements that must be carefully handled and integrated, and require additional administrative permits.
@PART[*]:HAS[~category[Structural],@MODULE[ModuleTagList]:HAS[~tag[NuclearRTG],~tag[PadInfrastructure]],@MODULE[ModuleGenerator]:HAS[#isAlwaysActive[true]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = NuclearRTG }
}
@PART[*]:HAS[~category[Structural],#tags[*rtg*],@MODULE[ModuleTagList]:HAS[~tag[Nuclear],~tag[EngineNuclear],~tag[NuclearRTG],~tag[PadInfrastructure]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = NuclearRTG }
}


// Nuclear
// Has radioactive elements that must be carefully handled and integrated, and require additional administrative permits.
@PART[*]:HAS[#tags[*nuke*],@MODULE[ModuleTagList]:HAS[~tag[Nuclear],~tag[EngineNuclear],~tag[NuclearRTG]]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = Nuclear }
}



// Reentry
// Reentry-Rated
// Has reentry equipment that needs proper integration and testing for safety.
@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[Reentry]],@MODULE[ModuleAblator]]:AFTER[zLRTR]
{
	%MODULE[ModuleTagList] { tag = Reentry }
}



// TankBalloon
// Balloon Tank
// Has a Balloon Tank that is very difficult to handle and must be pressurized properly at all times.



// TankServiceModule
// Service Module Tank
// Has a Service Module tank, specially designed to hold many different resources. This flexibility and complexity increases the launch cost.



// Toxic
// Toxic Propellants
// Has toxic propellants that need to be handled carefully prior to launch. Currently, these do not increase launch cost.



// Cleanup
@PART[*]:HAS[#engineTypeBestGuess]:AFTER[zLRTR]
{
	-engineTypeBestGuess = DEL
	-ispV = DEL
	-ispG = DEL
	-ispD = DEL
	-maxT = DEL
}

@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[#tag[autotagged]]]:AFTER[zLRTR]
{
  @MODULE[ModuleTagList]
  {
    -tag,0 = DEL
  }
}

@PART[*]:HAS[@MODULE[ModuleTagList]:HAS[~tag[]]]:AFTER[zLRTR]
{
  -MODULE[ModuleTagList] {}
}
